#!/usr/bin/env bash

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

BASE_DIR="$(dirname "$SCRIPT_DIR")"

EXECUTABLE="`basename $0`"

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Find stuck threads

SYNOPSIS
   ./$EXECUTABLE [-?]

DESRIPTION
   Finds struck threads. Stuck threads may occur for SB Type 5.

EOF
exit
fi

FILTER1="stuck thread"
FILTER2="wait for replies completed"

TMP_FILE="/tmp/padogrid-$EXECUTABLE-$TIMESTAMP.log"
if [ -f $TMP_FILE ]; then
   rm $TMP_FILE
fi
pushd $APP_LOG_DIR > /dev/null 2>&1
grep -e "$FILTER1" -e "$FILTER2" *.log > $TMP_FILE
echo ""
echo "Stuck Threads"
echo "-------------"
echo ""
first_stuck=""
last_stuck=""
replies_completed=""
prev_log_file=""
while IFS= read -r line; do
   prev_log_file=$log_file
   log_file=$(echo $line | sed 's/:.*$//')
   if [ "$prev_log_file" != "" ] && [ "$log_file" != "$prev_log_file" ]; then
      if [ "$replies_completed" != "" ]; then
         echo "$log_file"
         echo "$TTee First: $first_stuck"
         echo "$TTee Last:  $last_stuck"
         echo "$TLel Reply: $replies_completed"
         first_stuck=""
         last_stuck=""
         replies_completed=""
         echo ""
      fi
   else
      if [[ "$line" == *"$FILTER1"* ]]; then
         if [ "$first_stuck" == "" ]; then
            first_stuck=$line
         fi
         last_stuck=$line
      elif [[ "$line" == *"$FILTER2"* ]]; then
         replies_completed=$line
      fi
      if [ "$replies_completed" != "" ]; then
         echo "$log_file"
         echo "$TTee First: $first_stuck"
         echo "$TTee Last:  $last_stuck"
         echo "$TLel Reply: $replies_completed"
         first_stuck=""
         last_stuck=""
         replies_completed=""
         echo ""
      fi
   fi
done < "$TMP_FILE"
unset IFS

if [ "$first_stuck" != "" ]; then
   echo "Stuck thread(s)"
   echo "$TTee First: $first_stuck"
   echo "$TTee Last:  $last_stuck"
   echo "$TLel Reply: $replies_completed"
fi

rm $TMP_FILE
popd > /dev/null 2>&1

